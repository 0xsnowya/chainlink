import numpy as np
import numpy
import matplotlib.pyplot as plt
import math

vrfFulfillGas =[90839,90839,90839,90839,90839,90839,90849,90849,90851,90851,90851,90851,90851,90861,90861,90861,90861,90861,90861,90863,90863,90863,90863,90863,90863,90863,90863,90863,90863,90863,90868,90868,90868,90873,90873,90873,90873,90873,90873,90873,90873,90873,90873,90873,90873,90873,90875,90875,90875,90875,90875,90875,90875,90875,90875,90875,90878,90878,90879,90884,90884,90884,90884,90884,90884,90884,90884,90884,90884,90884,90884,90884,90884,90884,90884,90886,90886,90886,90886,90886,90886,90886,90886,90886,90886,90886,90886,90886,90886,90886,90886,90889,90889,90889,90889,90889,90889,90891,90891,90891,90891,90891,90891,90891,90891,90891,90891,90896,90896,90896,90896,90896,90896,90896,90896,90896,90896,90896,90896,90896,90901,90901,90901,90901,90901,90901,90901,90901,90901,90903,90903,90903,90903,90903,90903,90903,90903,90903,90913,90913,90913,90913,90913,90913,90913,90913,90913,90913,90913,90913,90913,90913,90913,90913,90915,90915,90915,90915,90915,90915,90915,90915,90915,90915,90925,90925,90925,90925,90925,90925,90925,90925,93974,93974,93976,93976,93986,93986,93988,93988,93998,93998,93998,93998,93998,93998,94000,94000,94000,94003,94003,94004,94004,94009,94009,94009,94009,94009,94009,94009,94009,94011,94011,94014,94016,94016,94016,94021,94026,94028,94028,94028,94028,94028,94028,94028,94028,94028,94028,94038,94038,94038,94038,94038,94038,94040,94040,94040,94040,94040,94050,94050,94050,94050,105502,105514,105514,105517,105519,105524,105524,105524,105524,105526,105526,105526,105526,105529,105531,105531,105531,105531,105536,105536,105536,105538,105538,105538,105541,105541,105543,105543,105543,105543,105543,105543,105543,105548,105548,105548,105553,105553,105553,105553,105553,105553,105553,105555,105555,105555,105555,105555,105564,105564,105564,105564,105564,105566,105566,105566,105566,105566,105566,105566,105566,105566,105566,105569,105571,105571,105571,105571,105576,105576,105576,105576,105576,105576,105583,105583,105583,105583,105593,105593,105595,105595,105605,105605,105605,105679,108627,108639,108639,108644,108649,108649,108651,108663,108663,108668,108668,108668,108668,108673,108678,108678,108680,108680,108689,108689,108689,108689,108689,108691,108696,108701,108701,108701,108701,108701,108706,108706,108708,108708,108708,108708,108730,108730,120130,120180,120182,120187,120189,120192,120192,120192,120194,120194,120199,120199,120204,120204,120211,120216,120216,120216,120216,120216,120218,120223,120223,120228,120228,120228,120228,120233,120235,120235,120235,120235,120244,120244,120244,120244,120244,120251,120251,120256,120256,120261,120261,120275,120275,123291,123319,123319,123341,123341,123358,123358,123369,123369,123369,123369,123371,123388,134783,134835,134835,134858,134870,134870,134870,134873,134873,134875,134885,134887,134887,134887,134887,134887,134897,134897,134899,134899,134904,134904,134909,134909,134914,134914,134915,134925,134925,134925,134927,134944,134954,134956,137983,137995,149539,149549,149561,149573,149578,149596,149608,149618,152641,152669,152676,164122,164174,164176,164193,164198,164210,164214,164221,178887,178903,178925,193568,193569,193601,196721,211387,222918]
data = sorted([(700000-x) for x in vrfFulfillGas])
counts, bins = np.histogram(data, 10)
normalized_counts = [c/sum(counts) for c in counts]
bins2 = []
i=1
while i<len(bins):
    bins2.append((bins[i]+bins[i-1])/2)
    i+=1
print(bins2)

# Approach 1: Use polyfit
# normalized_gas = [b-(sum(data)/len(co)) for b in bins[1:]]
# a, b = numpy.polyfit(np.array(bins2), numpy.log(np.array(normalized_counts)), 1)
# print(a,b)
# plt.scatter(bins2, normalized_counts)
# print([2.71**b*(2.71**(a*gas)) for gas in bins2])
# plt.plot(bins2, [math.exp(b)*(math.exp(a*gas)) for gas in bins2], label="y=exp({})*exp({}*x)".format(b, a))
# plt.legend()
# plt.xlabel("Gas budget")
# plt.ylabel("Probability")
# plt.show()

# Approach 2: Use curve fit
def fit_func(x, a, b, c):
    return a*np.exp(b*(x-c))
from scipy.optimize import curve_fit
params = curve_fit(fit_func, np.array(bins2), np.array(normalized_counts))
a,b,c = params[0]
print(a,b,c)
plt.plot(bins2, [math.exp(b*(gas-c)) for gas in bins2], label="y=exp({})*exp({}*x)".format(b, a))
plt.legend()
plt.xlabel("Gas budget")
plt.ylabel("Probability")
plt.show()
