// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/pkg/errors"
	"github.com/smartcontractkit/chainlink/core/cmd"
	"github.com/smartcontractkit/chainlink/core/config"
	"github.com/smartcontractkit/chainlink/core/logger"
	"github.com/smartcontractkit/chainlink/core/sessions"
	"os"
)

// Injectors from wire.go:

func InitializeProductionClient() *cmd.Client {
	generalConfig := config.NewGeneralConfig()
	loggerLogger := logger.NewLogger(generalConfig)
	chainlinkAppFactory := cmd.ChainlinkAppFactory{}
	prompter := cmd.NewTerminalPrompter()
	terminalKeyStoreAuthenticator := cmd.TerminalKeyStoreAuthenticator{
		Prompter: prompter,
	}
	apiInitializer := cmd.NewPromptingAPIInitializer(prompter)
	chainlinkRunner := cmd.ChainlinkRunner{}
	diskCookieStore := cmd.DiskCookieStore{
		Config: generalConfig,
	}
	cookieAuthenticator := cmd.NewSessionCookieAuthenticator(generalConfig, diskCookieStore, loggerLogger)
	fileSessionRequestBuilder := cmd.NewFileSessionRequestBuilder(loggerLogger)
	httpClient := newProductionHttpClient(generalConfig, loggerLogger, cookieAuthenticator, fileSessionRequestBuilder)
	promptingSessionRequestBuilder := cmd.NewPromptingSessionRequestBuilder(prompter)
	changePasswordPrompter := cmd.NewChangePasswordPrompter()
	passwordPrompter := cmd.NewPasswordPrompter()
	client := cmd.NewClient(generalConfig, loggerLogger, chainlinkAppFactory, terminalKeyStoreAuthenticator, apiInitializer, chainlinkRunner, httpClient, cookieAuthenticator, fileSessionRequestBuilder, promptingSessionRequestBuilder, changePasswordPrompter, passwordPrompter)
	return client
}

// wire.go:

func newProductionHttpClient(
	cfg config.GeneralConfig,
	lggr logger.Logger,
	cookieAuth cmd.CookieAuthenticator,
	sessionRequestBuilder cmd.FileSessionRequestBuilder,
) cmd.HTTPClient {
	sr := sessions.SessionRequest{}
	if credentialsFile := cfg.AdminCredentialsFile(); credentialsFile != "" {
		var err error
		sr, err = sessionRequestBuilder.Build(credentialsFile)
		if err != nil && errors.Cause(err) != cmd.ErrNoCredentialFile && !os.IsNotExist(err) {
			lggr.Fatalw("Error loading API credentials", "error", err, "credentialsFile", credentialsFile)
		}
	}
	return cmd.NewAuthenticatedHTTPClient(cfg, cookieAuth, sr)
}
